# .github/workflows/build-and-release.yml
# GitHub Actions workflow for LitePM (.NET Framework 4.7.2 VB.NET)

name: Build and Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      
    - name: Setup .NET Framework
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '4.7.2'
      continue-on-error: true
        
    - name: Restore NuGet packages
      run: nuget restore LitePM.sln
      
    - name: Build solution
      run: msbuild LitePM.sln /p:Configuration=Release /p:Platform="Any CPU" /p:OutputPath=bin\Release\
      
    - name: Copy dependencies and assets
      run: |
        $buildPath = "bin\Release"
        $publishPath = "publish"
        
        # Create publish directory
        New-Item -ItemType Directory -Force -Path $publishPath
        
        # Copy main executable and dependencies
        Copy-Item "$buildPath\*.exe" -Destination $publishPath -ErrorAction SilentlyContinue
        Copy-Item "$buildPath\*.dll" -Destination $publishPath -ErrorAction SilentlyContinue
        Copy-Item "$buildPath\*.config" -Destination $publishPath -ErrorAction SilentlyContinue
        
        # Copy documentation and license
        Copy-Item "README.md" -Destination $publishPath -ErrorAction SilentlyContinue
        Copy-Item "LICENSE" -Destination $publishPath -ErrorAction SilentlyContinue
        
        # Copy any additional resources
        if (Test-Path "Resources") {
          Copy-Item "Resources" -Destination $publishPath -Recurse -ErrorAction SilentlyContinue
        }
      shell: powershell
      
    - name: Create release package
      run: |
        $version = "1.0.0"
        if ($env:GITHUB_REF -like "refs/tags/*") {
          $version = $env:GITHUB_REF -replace "refs/tags/v", ""
        } elseif ($env:GITHUB_REF -like "refs/heads/*") {
          $branch = $env:GITHUB_REF -replace "refs/heads/", ""
          $sha = $env:GITHUB_SHA.Substring(0,7)
          $version = "1.0.0-$branch-$sha"
        }
        
        Compress-Archive -Path "publish\*" -DestinationPath "LitePM-$version-win.zip"
        echo "PACKAGE_VERSION=$version" >> $env:GITHUB_ENV
        echo "PACKAGE_NAME=LitePM-$version-win.zip" >> $env:GITHUB_ENV
      shell: powershell
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: LitePM-${{ env.PACKAGE_VERSION }}
        path: LitePM-${{ env.PACKAGE_VERSION }}-win.zip
        
    - name: Upload to release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./LitePM-${{ env.PACKAGE_VERSION }}-win.zip
        asset_name: LitePM-${{ env.PACKAGE_VERSION }}-win.zip
        asset_content_type: application/zip

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'
        
    - name: Setup MSBuild (for CodeQL)
      uses: microsoft/setup-msbuild@v1.3
      
    - name: Setup NuGet (for CodeQL)
      uses: NuGet/setup-nuget@v1
      
    - name: Restore packages (for CodeQL)
      run: nuget restore LitePM.sln
      
    - name: Build for analysis
      run: msbuild LitePM.sln /p:Configuration=Release /p:Platform="Any CPU"
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
